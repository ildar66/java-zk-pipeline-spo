BEGIN
PKG_DDL_UTILS.ADD_OBJECT('SPO_ROUTE_VERSION', 'CREATE TABLE SPO_ROUTE_VERSION
(
ID NUMBER(38) NOT NULL,
date_version TIMESTAMP(6) NOT NULL,
ID_TYPE_PROCESS NUMBER(38) NOT NULL
)');
PKG_DDL_UTILS.RECREATE_SEQUENCE_FOR_TABLE('SPO_ROUTE_VERSION','ID','SPO_ROUTE_VERSION_SEQ');
PKG_DDL_UTILS.ADD_CONSTRAINT('SPO_ROUTE_VERSION_PK', 'ALTER TABLE SPO_ROUTE_VERSION
        ADD CONSTRAINT SPO_ROUTE_VERSION_PK PRIMARY KEY (ID)');
PKG_DDL_UTILS.ADD_CONSTRAINT('SPO_ROUTE_VERSION_FK1', 'ALTER TABLE SPO_ROUTE_VERSION
        ADD CONSTRAINT SPO_ROUTE_VERSION_FK1 FOREIGN KEY (ID_TYPE_PROCESS)
        REFERENCES TYPE_PROCESS (ID_TYPE_PROCESS)');

PKG_DDL_UTILS.ADD_OBJECT('SPO_ROUTE', 'CREATE TABLE SPO_ROUTE
(
ID NUMBER(38) NOT NULL,
stageName VARCHAR2(256) NOT NULL,
ID_VERSION NUMBER(38),
ID_DEF_DEP NUMBER(38) NOT NULL
)');
PKG_DDL_UTILS.RECREATE_SEQUENCE_FOR_TABLE('SPO_ROUTE','ID','SPO_ROUTE_SEQ');
PKG_DDL_UTILS.ADD_CONSTRAINT('SPO_ROUTE_PK', 'ALTER TABLE SPO_ROUTE
        ADD CONSTRAINT SPO_ROUTE_PK PRIMARY KEY (ID)');
PKG_DDL_UTILS.ADD_CONSTRAINT('SPO_ROUTE_FK1', 'ALTER TABLE SPO_ROUTE
        ADD CONSTRAINT SPO_ROUTE_FK1 FOREIGN KEY (ID_VERSION)
        REFERENCES SPO_ROUTE_VERSION (id)');
PKG_DDL_UTILS.ADD_CONSTRAINT('SPO_ROUTE_FK2', 'ALTER TABLE SPO_ROUTE
        ADD CONSTRAINT SPO_ROUTE_FK2 FOREIGN KEY (ID_DEF_DEP)
        REFERENCES departments (id_department)');
END;
/
CREATE TABLE R_SPO_ROUTE_DEPARTMENT 
(
  ID_SPO_ROUTE NUMBER NOT NULL 
, ID_DEPARTMENT NUMBER NOT NULL 
);

ALTER TABLE R_SPO_ROUTE_DEPARTMENT
ADD CONSTRAINT R_SPO_ROUTE_DEPARTMENT_DE_FK1 FOREIGN KEY
(
  ID_DEPARTMENT 
)
REFERENCES DEPARTMENTS
(
  ID_DEPARTMENT 
)
ENABLE;

ALTER TABLE R_SPO_ROUTE_DEPARTMENT
ADD CONSTRAINT R_SPO_ROUTE_DEPARTMENT_SP_FK1 FOREIGN KEY
(
  ID_SPO_ROUTE 
)
REFERENCES SPO_ROUTE
(
  ID 
)
ON DELETE CASCADE ENABLE;
insert into CPS_SECTION_ROLE_SPO_MAPPING 
select CPS_SECTION_ROLE_SPO_MAP_SEQ.nextval,m.section_role_id,'Клиентский менеджер поддерживающего подразделения' from CPS_SECTION_ROLE_SPO_MAPPING m where m.spo_role_name like 'Клиентский менеджер';
insert into CPS_SECTION_ROLE_SPO_MAPPING 
select CPS_SECTION_ROLE_SPO_MAP_SEQ.nextval,m.section_role_id,'Руководитель поддерживающего клиентского подразделения' from CPS_SECTION_ROLE_SPO_MAPPING m where m.spo_role_name like 'Клиентский менеджер';
commit;
