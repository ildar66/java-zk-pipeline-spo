update mdtask set product_name='' where product_name like 'null'
/
ALTER TABLE R_PRODUCT_GROUP_MDTASK ADD (PERIOD NUMBER )
/
ALTER TABLE R_PRODUCT_GROUP_MDTASK ADD (CMNT VARCHAR2(900) )
/
COMMENT ON COLUMN R_PRODUCT_GROUP_MDTASK.PERIOD IS 'период'
/
COMMENT ON COLUMN R_PRODUCT_GROUP_MDTASK.CMNT IS 'комментарий'
/
BEGIN
  PKG_DDL_UTILS.EXECUTE_STRING('DROP TRIGGER TRG_SUPPLY_R_ORG_MDTASK');
  PKG_DDL_UTILS.EXECUTE_STRING('DROP TRIGGER TRG_SUPPLY_CONTRACTOR_TYPE');
  PKG_DDL_UTILS.EXECUTE_STRING('DROP TRIGGER TRG_SUPPLY_DEPOSIT');
  PKG_DDL_UTILS.EXECUTE_STRING('DROP TRIGGER TRG_SUPPLY_WARRANTY');
  PKG_DDL_UTILS.EXECUTE_STRING('DROP TRIGGER TRG_SUPPLY_GARANT');
END;
/
CREATE OR REPLACE PROCEDURE SP_INSERT_CONTRACTOR(PAR_ID_R NUMBER, PAR_ID_MDTASK NUMBER, PAR_ID_CRMORG VARCHAR2, PAR_ID_PERSON NUMBER, PAR_ID_CONTRACTOR_TYPE NUMBER)
IS --TODO REMOVE KIRILCHEV
  VAR_ID_CREDIT_DEAL_CONTRACTOR NUMBER;
BEGIN
  VAR_ID_CREDIT_DEAL_CONTRACTOR := PAR_ID_R;
  
  IF PAR_ID_MDTASK IS NOT NULL AND (PAR_ID_CRMORG IS NOT NULL OR PAR_ID_PERSON IS NOT NULL) THEN
    IF VAR_ID_CREDIT_DEAL_CONTRACTOR IS NULL THEN
    SELECT MIN(ID_R)
    INTO VAR_ID_CREDIT_DEAL_CONTRACTOR
    FROM R_ORG_MDTASK S
    WHERE ID_MDTASK = PAR_ID_MDTASK AND ID_CRMORG = PAR_ID_CRMORG;
    END IF;

    IF VAR_ID_CREDIT_DEAL_CONTRACTOR IS NULL THEN
      SELECT R_ORG_MDTASK_SEQ.NEXTVAL
      INTO VAR_ID_CREDIT_DEAL_CONTRACTOR
      FROM DUAL;
    END IF;

    INSERT INTO R_ORG_MDTASK_SUPPLY(ID_R, ID_MDTASK, ID_CRMORG, ID_PERSON)
    SELECT VAR_ID_CREDIT_DEAL_CONTRACTOR ID_R, PAR_ID_MDTASK ID_MDTASK, PAR_ID_CRMORG ID_CRMORG, PAR_ID_PERSON ID_PERSON
    FROM DUAL
    WHERE NOT EXISTS(SELECT 1 FROM R_ORG_MDTASK_SUPPLY WHERE ID_MDTASK = PAR_ID_MDTASK AND (ID_CRMORG = PAR_ID_CRMORG OR ID_PERSON = PAR_ID_PERSON));
    
    SELECT MIN(ID_R)
    INTO VAR_ID_CREDIT_DEAL_CONTRACTOR
    FROM R_ORG_MDTASK_SUPPLY 
    WHERE ID_MDTASK = PAR_ID_MDTASK AND (ID_CRMORG = PAR_ID_CRMORG OR ID_PERSON = PAR_ID_PERSON);
  END IF;

  IF PAR_ID_CONTRACTOR_TYPE IS NOT NULL AND VAR_ID_CREDIT_DEAL_CONTRACTOR IS NOT NULL THEN
    INSERT INTO CONTRACTOR_TYPE_SUPPLY (ID_R, ID_CONTRACTOR_TYPE)
    SELECT VAR_ID_CREDIT_DEAL_CONTRACTOR, PAR_ID_CONTRACTOR_TYPE
    FROM DUAL
    WHERE NOT EXISTS(SELECT 1 FROM CONTRACTOR_TYPE_SUPPLY S WHERE S.ID_R = VAR_ID_CREDIT_DEAL_CONTRACTOR AND S.ID_CONTRACTOR_TYPE = PAR_ID_CONTRACTOR_TYPE);
  END IF;
END;
/
CREATE OR REPLACE PROCEDURE SPO_CONTRACTOR_SYNC(PAR_ID_MDTASK IN MDTASK.ID_MDTASK%TYPE) --TODO REMOVE KIRILCHEV
IS
CURRENT_DATE DATE := SYSDATE;

VAR_ID_CONTRACTOR_TYPE NUMBER;
BEGIN
  FOR R_ORG_MDTASK_ROW IN (SELECT * FROM R_ORG_MDTASK WHERE ID_MDTASK = PAR_ID_MDTASK) LOOP
    SP_INSERT_CONTRACTOR(R_ORG_MDTASK_ROW.ID_R,  PAR_ID_MDTASK, R_ORG_MDTASK_ROW.ID_CRMORG, NULL, NULL);

    FOR REC IN (SELECT * FROM R_CONTRACTOR_TYPE_MDTASK WHERE ID_R = R_ORG_MDTASK_ROW.ID_R) LOOP
      SP_INSERT_CONTRACTOR(REC.ID_R, NULL, NULL, NULL, REC.ID_CONTRACTOR_TYPE);
    END LOOP;
  END LOOP;

  SELECT ID_CONTRACTOR_TYPE INTO VAR_ID_CONTRACTOR_TYPE FROM CONTRACTOR_TYPE WHERE KEY = 'WARRANTY';
  FOR REC IN (SELECT * FROM WARRANTY WHERE ID_MDTASK = PAR_ID_MDTASK) LOOP
    SP_INSERT_CONTRACTOR(NULL, PAR_ID_MDTASK, REC.ORG, REC.ID_PERSON, VAR_ID_CONTRACTOR_TYPE);
  END LOOP;

  SELECT ID_CONTRACTOR_TYPE INTO VAR_ID_CONTRACTOR_TYPE FROM CONTRACTOR_TYPE WHERE KEY = 'GARANT';
  FOR REC IN (SELECT * FROM GARANT WHERE ID_MDTASK = PAR_ID_MDTASK) LOOP
    SP_INSERT_CONTRACTOR(NULL, PAR_ID_MDTASK, REC.ORG, REC.ID_PERSON, VAR_ID_CONTRACTOR_TYPE);
  END LOOP;

  SELECT ID_CONTRACTOR_TYPE INTO VAR_ID_CONTRACTOR_TYPE FROM CONTRACTOR_TYPE WHERE KEY = 'DEPOSIT';
  FOR REC IN (SELECT * FROM DEPOSIT WHERE ID_MDTASK = PAR_ID_MDTASK) LOOP
    SP_INSERT_CONTRACTOR(NULL, PAR_ID_MDTASK, REC.ID_CRMORG, REC.ID_PERSON, VAR_ID_CONTRACTOR_TYPE);
  END LOOP;

  UPDATE R_ORG_MDTASK_SUPPLY S
  SET DELETE_DATE = SYSDATE
  WHERE DELETE_DATE IS NULL AND ID_MDTASK = PAR_ID_MDTASK AND
  NOT EXISTS (
      SELECT 1
      FROM SPO_ALL_CONTRACTOR
      WHERE
      ID_MDTASK = PAR_ID_MDTASK
      AND
      (
           ID_CRMORG = S.ID_CRMORG
           OR
           ID_PERSON = S.ID_PERSON
      )
  );
END;
/
